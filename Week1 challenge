Last login: Mon Feb  6 18:42:12 on ttys001
/Users/seandavis/.zprofile:export:4: not valid in this context: export HOMEBREW_PREFIX
seandavis@Seans-Air 03-JavaScript % git pull
Enter passphrase for key '/Users/seandavis/.ssh/id_ed25519': 
Already up to date.
seandavis@Seans-Air 03-JavaScript % git pull 03-Javascript
fatal: '03-Javascript' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
seandavis@Seans-Air 03-JavaScript % git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"
seandavis@Seans-Air 03-JavaScript % cd
seandavis@Seans-Air ~ % cd seandavis
cd: no such file or directory: seandavis
seandavis@Seans-Air ~ % cd bootcamp
seandavis@Seans-Air bootcamp % git@utsa.bootcampcontent.com:utsa-bootcamp/UTSA-VIRT-FSF-PT-01-2023-U-LOLC.git
zsh: no such file or directory: git@utsa.bootcampcontent.com:utsa-bootcamp/UTSA-VIRT-FSF-PT-01-2023-U-LOLC.git
seandavis@Seans-Air bootcamp % git clone git@utsa.bootcampcontent.com:utsa-bootcamp/UTSA-VIRT-FSF-PT-01-2023-U-LOLC.git
fatal: destination path 'UTSA-VIRT-FSF-PT-01-2023-U-LOLC' already exists and is not an empty directory.
seandavis@Seans-Air bootcamp % git commit
fatal: not a git repository (or any of the parent directories): .git
seandavis@Seans-Air bootcamp % git push
fatal: not a git repository (or any of the parent directories): .git
seandavis@Seans-Air bootcamp % ls
2023Class			index.html
UTSA-VIRT-FSF-PT-01-2023-U-LOLC	pre-work-study-guide
Week1-Challenge			prework-study-guide
first-day.txt
seandavis@Seans-Air bootcamp % pwd
/Users/seandavis/bootcamp
seandavis@Seans-Air bootcamp % git clone
fatal: You must specify a repository to clone.

usage: git clone [<options>] [--] <repo> [<dir>]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    --reject-shallow      don't clone shallow repository
    -n, --no-checkout     don't create a checkout
    --bare                create a bare repository
    --mirror              create a mirror repository (implies bare)
    -l, --local           to clone from a local repository
    --no-hardlinks        don't use local hardlinks, always copy
    -s, --shared          setup as shared repository
    --recurse-submodules[=<pathspec>]
                          initialize submodules in the clone
    --recursive ...       alias of --recurse-submodules
    -j, --jobs <n>        number of submodules cloned in parallel
    --template <template-directory>
                          directory from which templates will be used
    --reference <repo>    reference repository
    --reference-if-able <repo>
                          reference repository
    --dissociate          use --reference only while cloning
    -o, --origin <name>   use <name> instead of 'origin' to track upstream
    -b, --branch <branch>
                          checkout <branch> instead of the remote's HEAD
    -u, --upload-pack <path>
                          path to git-upload-pack on the remote
    --depth <depth>       create a shallow clone of that depth
    --shallow-since <time>
                          create a shallow clone since a specific time
    --shallow-exclude <revision>
                          deepen history of shallow clone, excluding rev
    --single-branch       clone only one branch, HEAD or --branch
    --no-tags             don't clone any tags, and make later fetches not to follow them
    --shallow-submodules  any cloned submodules will be shallow
    --separate-git-dir <gitdir>
                          separate git dir from working tree
    -c, --config <key=value>
                          set config inside the new repository
    --server-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only
    --filter <args>       object filtering
    --remote-submodules   any cloned submodules will use their remote-tracking branch
    --sparse              initialize sparse-checkout file to include only files at root

seandavis@Seans-Air bootcamp % git@utsa.bootcampcontent.com:utsa-bootcamp/UTSA-VIRT-FSF-PT-01-2023-U-LOLC.git
zsh: no such file or directory: git@utsa.bootcampcontent.com:utsa-bootcamp/UTSA-VIRT-FSF-PT-01-2023-U-LOLC.git
seandavis@Seans-Air bootcamp % git add git@utsa.bootcampcontent.com:utsa-bootcamp/UTSA-VIRT-FSF-PT-01-2023-U-LOLC.git
fatal: not a git repository (or any of the parent directories): .git
seandavis@Seans-Air bootcamp % git pull git@utsa.bootcampcontent.com:utsa-bootcamp/UTSA-VIRT-FSF-PT-01-2023-U-LOLC.git
fatal: not a git repository (or any of the parent directories): .git
seandavis@Seans-Air bootcamp % cd Week1-Challenge 
seandavis@Seans-Air Week1-Challenge % git add index.html
seandavis@Seans-Air Week1-Challenge % git commit
hint: Waiting for your editor to close the file... 


# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Committer: Sean Davis <seandavis@Seans-Air.attlocal.net>
#
# On branch main
# Your branch is up to date with 'origin/main'.
#
# Changes to be committed:
#       new file:   index.html
In thic challenge i refactored html code by deleting div tags and adding section tabs to the working code.









-- INSERT --
